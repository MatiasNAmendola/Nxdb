<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>

<title>C:/Code/Nxdb/Nxdb/Node/Element.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<!-- Generated by Doxygen 1.8.0 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Events</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">C:/Code/Nxdb/Nxdb/Node/Element.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_element_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 ï»¿<span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright 2012 WildCard, LLC</span>
<a name="l00003"></a>00003 <span class="comment"> * </span>
<a name="l00004"></a>00004 <span class="comment"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00005"></a>00005 <span class="comment"> * you may not use this file except in compliance with the License.</span>
<a name="l00006"></a>00006 <span class="comment"> * You may obtain a copy of the License at</span>
<a name="l00007"></a>00007 <span class="comment"> * </span>
<a name="l00008"></a>00008 <span class="comment"> * http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00009"></a>00009 <span class="comment"> * </span>
<a name="l00010"></a>00010 <span class="comment"> * Unless required by applicable law or agreed to in writing, software</span>
<a name="l00011"></a>00011 <span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00012"></a>00012 <span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00013"></a>00013 <span class="comment"> * See the License for the specific language governing permissions and</span>
<a name="l00014"></a>00014 <span class="comment"> * limitations under the License.</span>
<a name="l00015"></a>00015 <span class="comment"> * </span>
<a name="l00016"></a>00016 <span class="comment"> */</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="keyword">using</span> System;
<a name="l00019"></a>00019 <span class="keyword">using</span> System.Linq;
<a name="l00020"></a>00020 <span class="keyword">using</span> System.Xml;
<a name="l00021"></a>00021 <span class="keyword">using</span> Nxdb.Dom;
<a name="l00022"></a>00022 <span class="keyword">using</span> org.basex.data;
<a name="l00023"></a>00023 <span class="keyword">using</span> org.basex.query.item;
<a name="l00024"></a>00024 <span class="keyword">using</span> org.basex.query.up.expr;
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="keyword">namespace </span>Nxdb.Node
<a name="l00027"></a>00027 {
<a name="l00031"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm">00031</a>     <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="class_nxdb_1_1_node_1_1_element.htm" title="Representation of an XML element node.">Element</a> : <a class="code" href="class_nxdb_1_1_node_1_1_container_node.htm" title="Base class for nodes that can contain other nodes (document and element).">ContainerNode</a>
<a name="l00032"></a>00032     {
<a name="l00033"></a>00033         <span class="comment">//Should only be called from Node.Get()</span>
<a name="l00034"></a>00034         <span class="keyword">internal</span> <a class="code" href="class_nxdb_1_1_node_1_1_element.htm" title="Representation of an XML element node.">Element</a>(ANode aNode, <a class="code" href="class_nxdb_1_1_database.htm" title="Represents a single database into which all documents should be stored. The documents in the database...">Database</a> database) : base(aNode, Data.ELEM, database) { }
<a name="l00035"></a>00035 
<a name="l00041"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#ac3e01f4ec902063218b4b98e128ac2ab">00041</a>         <span class="keyword">public</span> <a class="code" href="class_nxdb_1_1_node_1_1_element.htm#ac3e01f4ec902063218b4b98e128ac2ab" title="Initializes a new instance of the Element class. Manually constructed nodes are immutable and are not...">Element</a>(<span class="keywordtype">string</span> name) : base(new FElem(new QNm(name.Token())), Data.ELEM, null) { }
<a name="l00042"></a>00042 
<a name="l00043"></a>00043         <span class="keyword">public</span> <span class="keyword">override</span> System.Xml.XmlNodeType NodeType
<a name="l00044"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a55d9f00aa78ca8273a1ae20ab2e7ca00">00044</a>         {
<a name="l00045"></a>00045             <span class="keyword">get</span> { <span class="keywordflow">return</span> System.Xml.XmlNodeType.Element; }
<a name="l00046"></a>00046         }
<a name="l00047"></a>00047         
<a name="l00048"></a>00048         <span class="comment">// Gets a specific attribute ANode for a given attribute name</span>
<a name="l00049"></a>00049         <span class="keyword">private</span> ANode AttributeANode(<span class="keywordtype">string</span> name)
<a name="l00050"></a>00050         {
<a name="l00051"></a>00051             QNm qnm = <span class="keyword">new</span> QNm(name.Token());
<a name="l00052"></a>00052             <span class="keywordflow">return</span> EnumerateANodes(ANode.attributes()).FirstOrDefault(n =&gt; n.qname().eq(qnm));
<a name="l00053"></a>00053         }
<a name="l00054"></a>00054 
<a name="l00061"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a7f9af55a9401ebc0ac56d5c7e8429025">00061</a>         <span class="keyword">public</span> <a class="code" href="class_nxdb_1_1_node_1_1_attribute.htm" title="Representation of an XML attribute node.">Attribute</a> <a class="code" href="class_nxdb_1_1_node_1_1_attribute.htm" title="Representation of an XML attribute node.">Attribute</a>(<span class="keywordtype">string</span> name)
<a name="l00062"></a>00062         {
<a name="l00063"></a>00063             <span class="keywordflow">if</span> (name == null) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00064"></a>00064             <span class="keywordflow">if</span> (name == String.Empty) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00065"></a>00065             Check();
<a name="l00066"></a>00066             ANode node = AttributeANode(name);
<a name="l00067"></a>00067             <span class="keywordflow">return</span> node == null ? null : (<a class="code" href="class_nxdb_1_1_node_1_1_attribute.htm" title="Representation of an XML attribute node.">Attribute</a>) Get(node);
<a name="l00068"></a>00068         }
<a name="l00069"></a>00069 
<a name="l00078"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a3a269736d27d392318080d00e00207a5">00078</a>         <span class="keyword">public</span> <span class="keywordtype">string</span> AttributeValue(<span class="keywordtype">string</span> name)
<a name="l00079"></a>00079         {
<a name="l00080"></a>00080             <span class="keywordflow">if</span> (name == null) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00081"></a>00081             <span class="keywordflow">if</span> (name == String.Empty) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00082"></a>00082             Check();
<a name="l00083"></a>00083             ANode node = AttributeANode(name);
<a name="l00084"></a>00084             <span class="keywordflow">return</span> node == null ? String.Empty : node.@string().Token();
<a name="l00085"></a>00085         }
<a name="l00086"></a>00086 
<a name="l00092"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a9995301e318bb4b3795ab778805b9881">00092</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> RemoveAllAttributes()
<a name="l00093"></a>00093         {
<a name="l00094"></a>00094             Check(<span class="keyword">true</span>);
<a name="l00095"></a>00095             ANode[] nodes = EnumerateANodes(ANode.attributes()).ToArray();
<a name="l00096"></a>00096             <a class="code" href="class_nxdb_1_1_updates.htm" title="Instances of this class should be placed around combined update operations. It&#39;s primary purpose is t...">Updates</a>.Do(<span class="keyword">new</span> Delete(null, Seq.get(nodes, nodes.Length)));
<a name="l00097"></a>00097         }
<a name="l00098"></a>00098 
<a name="l00105"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#ae8278a8359600a94e661071355c03b96">00105</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> RemoveAttribute(<span class="keywordtype">string</span> name)
<a name="l00106"></a>00106         {
<a name="l00107"></a>00107             <span class="keywordflow">if</span> (name == null) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00108"></a>00108             <span class="keywordflow">if</span> (name == String.Empty) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00109"></a>00109             Check(<span class="keyword">true</span>);
<a name="l00110"></a>00110             DBNode node = AttributeANode(name) as DBNode;
<a name="l00111"></a>00111             <span class="keywordflow">if</span> (node != null)
<a name="l00112"></a>00112             {
<a name="l00113"></a>00113                 <a class="code" href="class_nxdb_1_1_updates.htm" title="Instances of this class should be placed around combined update operations. It&#39;s primary purpose is t...">Updates</a>.Do(<span class="keyword">new</span> Delete(null, node));
<a name="l00114"></a>00114             }
<a name="l00115"></a>00115         }
<a name="l00116"></a>00116 
<a name="l00122"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a271dad5f63ab11be40e3ffab82ebbb21">00122</a>         <span class="keyword">public</span> <span class="keywordtype">void</span> InsertAttribute(<span class="keywordtype">string</span> name, <span class="keywordtype">string</span> value)
<a name="l00123"></a>00123         {
<a name="l00124"></a>00124             <span class="keywordflow">if</span> (name == null) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00125"></a>00125             <span class="keywordflow">if</span> (value == null) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;value&quot;</span>);
<a name="l00126"></a>00126             <span class="keywordflow">if</span> (name == String.Empty) <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;name&quot;</span>);
<a name="l00127"></a>00127             Check();
<a name="l00128"></a>00128             FAttr attr = <span class="keyword">new</span> FAttr(<span class="keyword">new</span> QNm(name.Token()), value.Token());
<a name="l00129"></a>00129             <span class="keywordflow">if</span> (DbNode != null)
<a name="l00130"></a>00130             {
<a name="l00131"></a>00131                 <a class="code" href="class_nxdb_1_1_updates.htm" title="Instances of this class should be placed around combined update operations. It&#39;s primary purpose is t...">Updates</a>.Do(<span class="keyword">new</span> Insert(null, attr, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, DbNode));
<a name="l00132"></a>00132             }
<a name="l00133"></a>00133             <span class="keywordflow">else</span> <span class="keywordflow">if</span> (FNode != null)
<a name="l00134"></a>00134             {
<a name="l00135"></a>00135                 ((FElem) FNode).add(attr);
<a name="l00136"></a>00136             }
<a name="l00137"></a>00137         }
<a name="l00138"></a>00138 
<a name="l00139"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a7a72cef1892899fa611bf7b3e3caebbf">00139</a>         <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> RemoveAll()
<a name="l00140"></a>00140         {
<a name="l00141"></a>00141             <span class="keyword">using</span> (<span class="keyword">new</span> <a class="code" href="class_nxdb_1_1_updates.htm" title="Instances of this class should be placed around combined update operations. It&#39;s primary purpose is t...">Updates</a>())
<a name="l00142"></a>00142             {
<a name="l00143"></a>00143                 RemoveAllAttributes();
<a name="l00144"></a>00144                 base.RemoveAll();
<a name="l00145"></a>00145             }
<a name="l00146"></a>00146         }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> Name
<a name="l00149"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a9812729758aa1758f13ea39db19e78d7">00149</a>         {
<a name="l00150"></a>00150             <span class="keyword">get</span> { <span class="keywordflow">return</span> NameImpl; }
<a name="l00151"></a>00151             <span class="keyword">set</span> { NameImpl = value; }
<a name="l00152"></a>00152         }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154         <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> LocalName
<a name="l00155"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#aa08b8ae56c5c0613bbadab4d1de06c19">00155</a>         {
<a name="l00156"></a>00156             <span class="keyword">get</span> { <span class="keywordflow">return</span> LocalNameImpl; }
<a name="l00157"></a>00157         }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159         <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> Prefix
<a name="l00160"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#a65ac7662306adec238e9eff751a3e93b">00160</a>         {
<a name="l00161"></a>00161             <span class="keyword">get</span> { <span class="keywordflow">return</span> PrefixImpl; }
<a name="l00162"></a>00162         }
<a name="l00163"></a>00163 
<a name="l00164"></a>00164         <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> NamespaceUri
<a name="l00165"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#aa3eae5a7d41d48ec7ee92dd35d89f8e2">00165</a>         {
<a name="l00166"></a>00166             <span class="keyword">get</span> { <span class="keywordflow">return</span> NamespaceUriImpl; }
<a name="l00167"></a>00167         }
<a name="l00168"></a>00168 
<a name="l00169"></a><a class="code" href="class_nxdb_1_1_node_1_1_element.htm#ae0268871a1166897db273e18158b09ab">00169</a>         <span class="keyword">protected</span> <span class="keyword">override</span> XmlNode CreateXmlNode()
<a name="l00170"></a>00170         {
<a name="l00171"></a>00171             <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="class_nxdb_1_1_dom_1_1_dom_element.htm">DomElement</a>(<span class="keyword">this</span>);
<a name="l00172"></a>00172         }
<a name="l00173"></a>00173     }
<a name="l00174"></a>00174 }
</pre></div></div><!-- contents -->


<hr class="footer"/><address class="footer"><small>
Generated on Thu Mar 15 2012 12:17:34 by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.0
</small></address>

</body>
</html>
